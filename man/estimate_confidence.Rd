% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_confidence.R
\name{estimate_confidence}
\alias{estimate_confidence}
\title{estimate confidence intervals for choc analysis
Two methods are available: perm permutates the kernell per time step and estimates Kendall tau on permutations.
kern fits a kernell on the whole dataset (assuming that there is not time trend) and uses this overall kernell to
generate surrogate data sets on which kendall tau are estimated. Permutations is a good solution when there is seasonnality
within time step to preserve internal seasonality, however, it requires more time steps. kern is a good solution when there
is no seasonnality within time step or when the number of observations per time step is important enough.}
\usage{
estimate_confidence(mychoc, method = "perm", conf = 0.95,
  nb_replicates = 500)
}
\arguments{
\item{mychoc}{a list as returned by \link{choc}}

\item{method}{either "perm" (default) or "kern", see details}

\item{conf}{size of the confidence interval}

\item{nb_replicates}{number of replicates used to assess confidence intervals}
}
\value{
an updated version of mychoc with two columns added to mychoc$grid which corresponds to the bounds of the confidence interval
}
\description{
estimate confidence intervals for choc analysis
Two methods are available: perm permutates the kernell per time step and estimates Kendall tau on permutations.
kern fits a kernell on the whole dataset (assuming that there is not time trend) and uses this overall kernell to
generate surrogate data sets on which kendall tau are estimated. Permutations is a good solution when there is seasonnality
within time step to preserve internal seasonality, however, it requires more time steps. kern is a good solution when there
is no seasonnality within time step or when the number of observations per time step is important enough.
}
\examples{
#generate artificial data set
#two time series measured on 40 time steps with 365 observations per time step.
#the two series follow a multinormal time series with a tend on means and a constant
#covariance matrix
library(MASS)
library(ks)
tvar <- rep(1:40,times=100) #times steps
meansX <- tvar/40 #trend on 1st variable
meansY <- -0.5*tvar/40 #trend on 2nd variable
sigma <- matrix(c(1,.1,.1,1),2,2) #covariance matrix
values <- t(apply(cbind(meansX,meansY),1,function(mu) mvrnorm(1,mu,sigma))) #generate the values
H<-Hpi #choose the default bandwith
res <- choc(values,H,tvar)
#here we put a low number of replicates to limit computation time
res_confid <- estimate_confidence(res,"perm",0.95,50)

}
